1. 빈발 아이템 찾기
* Market-Basket Model
- Association rules : If-then rules about the contents of baskets
- Baskets, Items 
- Frequent Itemsets : sets of items that appear in >= s baskets ( s : minimum support )
- Support (for itemset I): number of baskets containing all items in I
- Confidence of a rule is the probability of j given I
conf(I->j) = support(I U j) / support(I)
- interesting Association Rules : high positive or negative interests
Interest(I -> j) = conf(I -> j) - Pr[j]

A long itemset contains an exponetial number of subitemsets
- Maximal frequent itemsets : there is no frequent superset
- Closed frequent itemsets : there is no frequent superset with the same support 

Mining association rules
1) find all frequent itemsets I
2) generate rules

Finding frequent itemsets
Data format
- assume data te kept in flast files
Computation model 모든 바스킷을 차례로 읽고 처음부터 끝까지. 데이타 파일에 얼마나 빨리 접근하느냐. 
- The main cost of mining dis-resident data is usually the number of disk I/)s
- Many association-rule algorithms read the data in passes - all baskets read in turn 
- The cost is measured by the number of passes an algorithm makes over the data
Main-memory bottleneck 메모리를 효율적을 사용하는 것이 중요 
- for many frequent-itemsets algorithms, main-memory is the critical resource
Fingding Frequent Pairs
- naive algorithm은 메모리 용량을 초과한 사용 위험. 
- A-Priori algorithm, 'pruning' 가지치기

A-Priori Algorithm 
- a multi-pass algoritm for mining frequent itemsets im main memory
- pruning by monotonicity
- main-memory
 pass1 : item counts, 
 pass2 : frequent items, counts of pairs of frequent items(candidate pairs)

PCY Algorithm
- A-Priori,  hash 
- main memory
 pass1 : item counts, hash talble for pairs
 pass2 : frequent items, bitmap, counts of candidate pairs
PCY - Multistage Version
PCY - Multihash

Frequent Itemsets in<2 Passes algorithm : Random sampling, SON
Random samplig
- random sample of the market baskets, a-priori
- error : false positive, false negative

SON
- divide the data intok chunks, chunks are processed sequentially (not sampling)


2. 링크 분석
* PageRank Flow Model 
* Random walk
* Markov Process Theory 
* Google's solution : random teleport 
* Topic-specific PageRank (teleport set)
* term spam
*Link spam , Link Farm
* combating spam
* TrustRank for combating the Web Spam
* HITS:Hub and Authority Algorithm


3. 추천시스템
* 수많은 정보의 시대에서 적당한 정보를 얻기위한 방법 : 추천
- offline recommendation : popular item
- online recommendation : scarce items can be recommended, personalized







